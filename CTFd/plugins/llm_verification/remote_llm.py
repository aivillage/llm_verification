"""RESTful API calls to remote LLMs."""
# Standard library imports.
from logging import getLogger

# Third-party imports.
from requests import post
from requests.exceptions import HTTPError

# LLM Verification Plugin module imports.
from .config_manager import load_llmv_config

def generate_text(prompt):
    """Generate text from a prompt using the EleutherAI GPT-NeoX-20B model.

    Arguments:
        prompt: The prompt to generate text from.

    Raises:
        ValueError: If the Vanilla Neox API key is not set.
        HTTPError: If the EleutherAI API returns a non-200 HTTP status code.

    Returns:
        str: Text generated by the prompt.
    """
    log.info(f'Received text generation request for prompt "{prompt}"')
    # Load the Vanilla Neox API key from the config file.
    llmv_config = load_llmv_config()
    neox_token = llmv_config['vanilla_neox_api_key']
    if neox_token == 'UNSET':
        raise ValueError('Vanilla Neox API key is not set')
    response = post(url='https://api-inference.huggingface.co/models/EleutherAI/gpt-neox-20b',
                              headers={'Authorization': f'Bearer {neox_token}'},
                              json={'inputs': prompt})
    log.debug(f'Received {response.status_code} response from EleutherAI API')
    # If it's a successful HTTP status code, then...
    if response.status_code == 200:
        json_response = response.json()
        log.debug(f'Response: {json_response}')
        generated_text = json_response[0]['generated_text']
        # Remove newlines from the generated text.
        oneline_generation = generated_text.replace('\n', ' ')
        log.info(f'Received generated text from remote API: {oneline_generation}...')
        response = oneline_generation
    elif 400 <= response.status_code <= 599:
        # ... raise an error.
        raise HTTPError(f'EleutherAI API returned error status code {response.status_code}: '
                        f'Response: {response.json()}')
    # ... Otherwise, if it's an unrecognized HTTP status code, then...
    else:
        raise HTTPError(f'EleutherAI API returned unrecognized status code {response.status_code}: '
                        f'Response: {response.json()}')
        response = 'Error generating text.'
    log.info(f'Completed text generation for prompt "{prompt}"')
    return response